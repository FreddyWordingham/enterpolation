name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
     
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        rust: [ stable, nightly ]

    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - name: clippy
        if: matrix.os == 'ubuntu-latest' && matrix.rust == 'stable'
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      - name: cache cargo binaries
        id: cache
        uses: actions/cache@v2
        with:
          path: "/usr/share/rust/.cargo"
          key: ${{ runner.os }}-cargo-bins-${{ env.GITHUB_SHA }}
          restore-keys: ${{ runner.os }}-cargo-bins-

      - name: install tools
        if: steps.cache.outputs.cache_hit != 'true'
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --git https://github.com/NicolasKlenert/cargo-all-features.git

      - name: install tools
        if: steps.cache.outputs.cache_hit != 'true'
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-nono --locked

      - name: Run Tests
        uses: actions-rs/cargo@v1
        with:
          command: test-all-features

      - name: test no-std
        uses: action-rs/cargo@v1
        with:
          command: nono check
